package org.childstore.ui;

import org.childstore.model.Product;
import org.childstore.service.ProductService;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;


import java.util.List;
import java.util.Scanner;

public class WorkerMenu {
    private final ProductService productService = new ProductService();
    private final Scanner scanner = new Scanner(System.in);

    public void show() {
        boolean running = true;
        while (running) {
            System.out.println("\n–ú–µ–Ω—é –†–∞–±–æ—Ç–Ω–∏–∫–∞:");
            System.out.println("1. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤");
            System.out.println("2. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä");
            System.out.println("3. –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑");
            System.out.println("4. –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é");
            System.out.println("5. –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
            System.out.println("6. –ü–æ–∏—Å–∫ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É");
            System.out.println("0. –í—ã—Ö–æ–¥");


            System.out.print("–í–∞—à –≤—ã–±–æ—Ä: ");
            String input = scanner.nextLine();

            switch (input) {
                case "1":
                    showProducts();
                    break;
                case "2":
                    addProduct();
                    break;
                case "3":
                    placeOrder();
                    break;
                case "4":
                    searchByName();
                    break;
                case "5":
                    searchByCategory();
                    break;
                case "6":
                    searchBySerial();
                    break;
                case "0":
                    running = false;
                    System.out.println("–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...");
                    break;
                default:
                    System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ.");
            }
        }
    }

    private void showProducts() {
        List<Product> products = productService.getAllProducts();

        if (products.isEmpty()) {
            System.out.println("–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ.");
        } else {
            System.out.println("\n–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:");
            for (Product p : products) {
                System.out.println("üîπ " + p.getName() + " | üí∞ " + p.getPrice() +
                        " | –ö–æ–ª-–≤–æ: " + p.getQuantity() +
                        " | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + p.getCategory());
            }
        }

        System.out.println("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...");
        scanner.nextLine(); // –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è Enter
    }

    private void addProduct() {
        System.out.print("–ù–∞–∑–≤–∞–Ω–∏–µ: ");
        String name = scanner.nextLine();

        System.out.print("–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: ");
        String serial = scanner.nextLine();

        System.out.print("–¶–µ–Ω–∞: ");
        double price = Double.parseDouble(scanner.nextLine());

        System.out.print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ");
        int quantity = Integer.parseInt(scanner.nextLine());

        System.out.print("–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ");
        String category = scanner.nextLine();

        Product p = new Product(name, serial, price, quantity, category);
        productService.addProduct(p);
    }

    private void placeOrder() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞: ");
        String name = scanner.nextLine();

        try (PrintWriter writer = new PrintWriter(new FileOutputStream("orders.txt", true))) {
            writer.println(name);
            System.out.println("–¢–æ–≤–∞—Ä \"" + name + "\" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤.");
        } catch (IOException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∑–∞–∫–∞–∑–∞: " + e.getMessage());
        }

        System.out.println("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞...");
        scanner.nextLine();
    }

    private void searchByName() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ");
        String name = scanner.nextLine();

        List<Product> results = productService.searchByName(name);
        if (results.isEmpty()) {
            System.out.println("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
        } else {
            System.out.println("–ù–∞–π–¥–µ–Ω–æ: ");
            for (Product p : results) {
                System.out.println("üîπ " + p.getName() + " | " + p.getCategory());
            }
        }
        pause();
    }

    private void searchByCategory() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ");
        String category = scanner.nextLine();

        List<Product> results = productService.searchByCategory(category);
        if (results.isEmpty()) {
            System.out.println("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
        } else {
            System.out.println("–ù–∞–π–¥–µ–Ω–æ: ");
            for (Product p : results) {
                System.out.println("üîπ " + p.getName() + " | " + p.getCategory());
            }
        }
        pause();
    }

    private void pause() {
        System.out.println("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞...");
        scanner.nextLine();
    }
    private void searchBySerial() {
        System.out.print("üîç –í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: ");
        String serial = scanner.nextLine();

        Product p = productService.searchBySerial(serial);
        if (p != null) {
            System.out.println("–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä:");
            System.out.println("üîπ " + p.getName() + " | üí∞ " + p.getPrice() +
                    " | –ö–æ–ª-–≤–æ: " + p.getQuantity() +
                    " | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + p.getCategory());
        } else {
            System.out.println("–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º —Å–µ—Ä–∏–π–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }

        pause();
    }


}
